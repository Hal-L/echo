package KnowledgePoints.Array;
/*
    数组：是一种用于存储多个相同类型数据的存储模型

    定义格式：(推荐方式)
        数据类型[] 数组名;
        举例：int[] arr;

    数组初始化：
        A:所谓初始化：就是为数组中的数组元素分配内存空间，并为每个数组元素赋值
        B:数组初始化
            动态初始化
            静态初始化

    动态初始化：
        初始化时只指定数组长度，由系统为数组容器分配初始值
        格式：数据类型[] 变量名 =  new  数据类型[数组长度];
        范例：int[] arr = new int[3];

    注意:
        打印数组变量的时候, 会打印出数组的内存地址
        [I@10f87f48 :
            @ : 分隔符
            [ : 当前的空间是一个数组类型
            I : 当前数组容器中所存储的数据类型
            10f87f48 : 十六进制内存地址
                    0 1 2 3 4 5 6 7 8 9 a b c d e f

     静态初始化：
        初始化时指定每个数组元素的初始值，由系统决定数组长度

        格式：数据类型[] 变量名 =  new  数据类型[]{数据1, 数据2, 数据3, ……};
        范例：    int[]   arr =  new      int[]{1, 2, 3};

        简化格式：数据类型[] 变量名 = {数据1, 数据2, 数据3, ……};
        范例：       int[]    arr = {1, 2, 3};


    索引越界：访问了数组中不存在的索引对应的元素，造成索引越界问题

    空指针异常：访问的数组已经不再指向堆内存的数据，造成空指针异常

    null：空值，引用数据类型的默认值，表示不指向任何有效对象
 */
public class ArrayDemo {
    public static void main(String[] args) {
        
    }
}
